// Generated by CoffeeScript 2.4.1
(function() {
  var getAddDisplayNameFixer, shouldFix;

  ({shouldFix, getAddDisplayNameFixer} = require('../util'));

  module.exports = {
    meta: {
      docs: {
        description: 'Flag flowMax() components without addDisplayName()',
        category: 'Possible Errors',
        recommended: true
      },
      schema: [],
      fixable: 'code'
    },
    create: function(context) {
      var report;
      report = function(node) {
        return context.report({
          node,
          message: 'Set a display name with addDisplayName()',
          fix: shouldFix({context}) ? getAddDisplayNameFixer({node, context}) : null
        });
      };
      return {
        "CallExpression[callee.name='flowMax']": function(node) {
          var argument, i, len, ref, ref1;
          if (!((ref = node.arguments) != null ? ref.length : void 0)) {
            return;
          }
          if (!(function() {
            var ref1;
            if (((ref1 = node.parent) != null ? ref1.type : void 0) !== 'VariableDeclarator') {
              return false;
            }
            if (node.parent.id.type !== 'Identifier') {
              return false;
            }
            if (!/^[A-Z]/.test(node.parent.id.name)) {
              return false;
            }
            return true;
          })()) {
            return;
          }
          ref1 = node.arguments;
          for (i = 0, len = ref1.length; i < len; i++) {
            argument = ref1[i];
            if ((argument != null ? argument.type : void 0) === 'CallExpression' && argument.callee.type === 'Identifier' && argument.callee.name === 'addDisplayName') {
              return;
            }
          }
          return report(node);
        }
      };
    }
  };

}).call(this);
